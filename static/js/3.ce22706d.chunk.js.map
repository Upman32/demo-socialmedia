{"version":3,"sources":["components/Profile/Profileinfo/Profileinfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profileinfo/ProfileStatus.jsx","components/Profile/Profileinfo/ProfileStatusHooks.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","likecounts","MyPosts","React","memo","PostElements","posts","map","posting","postsblock","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength","MaxLengthCreator","Textarea","Element","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","RequiredField","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Component","ProfileStatusHooks","useState","editMode","seteditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Profileinfo","profile","c","descriptionBlock","photos","large","Profile","ProfileContainer","userId","this","match","params","loguserId","history","push","getUserProfile","getStatus","isAuth","to","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.ce22706d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"Profileinfo_descriptionBlock__2xPg3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsblock\":\"MyPosts_postsblock__459TZ\",\"posts\":\"MyPosts_posts__3NPOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3IzjM\"};","import classes from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n    return (\r\n        \r\n        <div className={classes.item}>\r\n          <img src='https://i.pinimg.com/originals/50/ee/c4/50eec4082bceec8547dba21ddfc45326.jpg' alt='LogoImage' />\r\n           {props.message} \r\n            <div>\r\n                <span>like</span> {props.likecounts}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { MaxLengthCreator, RequiredField } from '../../../Utils/Validators'\r\nimport { Element } from '../../common/Forms_Control/Form_Control'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let PostElements = props.posts.map(posting => <Post message={posting.message} likecounts={posting.likecounts} />)\r\n\r\n\r\n let NewPostElement = React.createRef();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet Postadd = (values) => { \r\n    \r\n    props.addPost(values.newPostText)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.postsblock}>\r\n            <h3>My posts</h3>\r\n          <AddPostFormRedux onSubmit={Postadd}/>\r\n            <div className={classes.posts}>\r\n                {PostElements}\r\n            </div>\r\n        </div>)\r\n\r\n})\r\n let maxLength = MaxLengthCreator(10)\r\n\r\nconst Textarea =Element(\"textarea\")\r\n\r\nconst AddPostForm = (props) => {\r\nreturn ( \r\n<form onSubmit={props.handleSubmit}>  <div>\r\n    <Field component={Textarea} name=\"newPostText\"\r\n     placeholder='Enter some post' validate={[RequiredField, maxLength]} />\r\n</div>\r\n<div>\r\n    <button>Add Post</button>\r\n</div>\r\n </form> )\r\n}\r\nconst AddPostFormRedux = reduxForm({\r\n    form:'Posts_AddPostForm'\r\n})(AddPostForm)\r\n\r\n\r\nexport default MyPosts","\r\nimport { addPostActionCreator } from \"../../redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\n/* const MyPostsContainer = (props) => {\r\n/*     let state = props.store.getState()\r\n */\r\n   \r\n\r\n\r\n    /* return (\r\n\r\n        <StoreContext.Consumer>\r\n             {\r\n                 (store) => {\r\n                   \r\n                    let state = store.getState()\r\n\r\n\r\n                    let addPost = () => {\r\n                        store.dispatch(addPostActionCreator());\r\n                    }\r\n                \r\n                \r\n                \r\n                    let onPostChange = (text) => {\r\n                        let action = updateNewPostTextActionCreator(text)\r\n                        store.dispatch(action)\r\n                    }\r\n           \r\n           return  < MyPosts\r\n                updateNewPostText={onPostChange}\r\n                addPost={addPost}\r\n                posts={state.profilePage.posts}\r\n                newPostText={state.profilePage.newPostText}\r\n\r\n\r\n\r\n            />}\r\n\r\n\r\n\r\n            }\r\n        </StoreContext.Consumer>\r\n    )\r\n\r\n\r\n} */ \r\n\r\n\r\n\r\n\r\n\r\nlet mapsStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    \r\n    \r\n    \r\n\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapsStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer","\r\nimport c from './Profileinfo.module.css'\r\nimport React from 'react'\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n   \r\n\r\nstate = {\r\neditMode: false,\r\nstatus: this.props.status\r\n\r\n\r\n}\r\nactivateEditMode = () => {\r\n   \r\n   console.log(\"this:\", this)\r\n   this.setState(  {   \r\neditMode: true\r\n    }   )\r\n\r\n\r\n}\r\ndeactivateEditMode = () => {\r\n   this.setState(  {   \r\neditMode: false\r\n    }   )\r\n    this.props.updateStatus(  this.state.status )\r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState ) {\r\n   if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\nstatus:this.props.status   \r\n      })\r\n   }\r\n   console.log(\"componentDidUpdate\")\r\n}\r\nonStatusChange = (e) => {\r\n   this.setState({\r\n      status:e.currentTarget.value\r\n   })\r\n\r\n}\r\n\r\n\r\n\r\n   render()   { \r\n      console.log(\"render\")\r\n      return (\r\n   \r\n   <div>\r\n      {!this.state.editMode && \r\n       <div>   \r\n<span onDoubleClick={this.activateEditMode}>\r\n   {this.props.status || \"===\"}</span>\r\n   </div>\r\n   }\r\n   {this.state.editMode && \r\n   <div>\r\n<input onChange={this.onStatusChange}\r\n  autoFocus={true}\r\n  onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n   </div>\r\n   }\r\n   </div>\r\n  \r\n    )\r\n   }\r\n    \r\n}\r\n\r\n    export default ProfileStatus","\r\nimport c from './Profileinfo.module.css'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst ProfileStatusHooks = (props) =>{\r\n\r\n   \r\n\r\nlet [editMode, seteditMode] = useState(false)\r\n\r\nlet [status, setStatus] = useState(props.status)\r\n\r\nuseEffect(\r\n  \r\n   ( )=> {\r\n      setStatus(props.status) \r\n   }, [props.status]\r\n   \r\n   \r\n   \r\n   )\r\n\r\n\r\nconst activate = () =>{\r\n   seteditMode(true)}\r\nconst deactivate = () => {\r\n   seteditMode(false)   ;\r\nprops.updateStatus(status)   }\r\n\r\nconst onStatusChange = (e) => {\r\nsetStatus(\r\n      e.currentTarget.value\r\n   )\r\n\r\n}\r\n\r\n\r\nreturn (\r\n   \r\n   <div>\r\n      {!editMode &&\r\n       <div>   \r\n<span onDoubleClick={activate} >\r\n   {props.status || \"===\"} yo</span>\r\n   </div>\r\n   }\r\n \r\n \r\n   {editMode && \r\n   <div>\r\n<input\r\n onChange={onStatusChange} autoFocus={true} onBlur={deactivate} value={status}\r\n />\r\n   </div>\r\n   }\r\n   </div>\r\n  \r\n    )\r\n   \r\n    \r\n}\r\n\r\n    export default ProfileStatusHooks","import Preloader from '../../common/preloader'\r\nimport c from './Profileinfo.module.css'\r\nimport React from 'react'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusHooks from './ProfileStatusHooks'\r\n\r\n\r\nconst Profileinfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n     <div>\r\n\r\n{/* <div>\r\n    <img src='https://c4.wallpaperflare.com/wallpaper/128/164/867/anime-monogatari-series-deishuu-kaiki-wallpaper-thumb.jpg' />\r\n</div> */}\r\n<div className={c.descriptionBlock}>\r\n    <img src={props.profile.photos.large} />\r\n    <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />\r\n</div>\r\n\r\n</div>\r\n    )\r\n}\r\n    \r\nexport default Profileinfo","\r\nimport React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport Profileinfo from './Profileinfo/Profileinfo'\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n    return (\r\n          <div>\r\n            <Profileinfo profile={props.profile} status={props.status}\r\n             updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/> \r\n            </div>\r\n    )\r\n    }\r\n\r\nexport default Profile\r\n","\r\nimport React from 'react';\r\nimport Profile from './Profile'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../redux/ProfileReducer';\r\nimport { Redirect, withRouter } from 'react-router';\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\nlet MapStatetoProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loguserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n        }\r\n    )\r\n    \r\nclass ProfileContainer extends React.Component  {\r\n    componentDidMount() {\r\n        let userId= this.props.match.params.userId\r\nif (!userId) {\r\n    userId = this.props.loguserId\r\n    if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n    }\r\n}\r\nthis.props.getUserProfile(userId);\r\n\r\nthis.props.getStatus(userId)\r\n        \r\n}\r\n    render()\r\n\r\n    {\r\n        \r\n        if (!this.props.isAuth) return  <Redirect to={\"/Login\"}/>\r\n    \r\n        return (\r\n        <Profile {...this.props} \r\n        profile={this.props.profile} \r\n        status={this.props.status}\r\n         updateStatus={this.props.updateStatus}/>\r\n    )\r\n    }   \r\n}\r\n\r\n\r\nexport default compose(\r\n    connect( MapStatetoProps,  {getUserProfile, getStatus, updateStatus}),\r\nwithRouter, withAuthRedirect\r\n    \r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}